apiVersion: v1
kind: Template
metadata:
  name: hmf-frontend
  annotations:
    iconClass: icon-jboss
    tags: nodejs, angular, web app
    template.openshift.io/provider-display-name: "Red Hat, Inc."
    description: Building @HowsMyFlattening frontend Angular App
parameters:
  - name: APP_NAME
    description: The name of the application
    displayName: Application Name
    required: true
  - name: APP_HOST
    description: The name of the Route
    displayName: Application Route
    required: true    
  - name: SOURCE_REPOSITORY_URL
    description: The source URL for the application
    displayName: Source URL
    required: true
  - name: SOURCE_REPOSITORY_REF
    description: The branch name for the application
    displayName: Source Branch
    value: master
    required: true
  - name: SOURCE_REPOSITORY_DIR
    description: The location within the source repo of the application
    displayName: Source Directory
    value: .
    required: true
  - name: BUILD_OUTPUT_DIR
    description: The location of the compiled static files from your web apps builder
    displayName: Output Directory
    value: /opt/app-root/src
    required: true
  - name: NPM_SCRIPT
    description: The npm script to run as indicated in package.json->scripts
    displayName: NPM Script
    value: build
    required: true
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}-builder
  spec: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}-runtime
  spec: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}-nodejs-builder-runtime
  spec:
    tags:
    - name: latest
      from:
        kind: DockerImage
        name: registry.redhat.io/rhel8/nodejs-10
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}-nginx-image-runtime
  spec:
    tags:
    - name: latest
      from:
        kind: DockerImage
        name: registry.redhat.io/rhel8/nginx-116
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}-builder
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}-builder:latest
    postCommit: {}
    resources: {}
    source:
      git:
        uri: ${SOURCE_REPOSITORY_URL}
        ref: ${SOURCE_REPOSITORY_REF}
      contextDir: ${SOURCE_REPOSITORY_DIR}
      type: Git
    strategy:
      sourceStrategy:
        env:
          - name: NPM_RUN
            value:  ${NPM_SCRIPT}
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}-nodejs-builder-runtime:latest
        incremental: true
      type: Source
    triggers:
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}-runtime
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}-runtime:latest
    postCommit: {}
    resources: {}
    source:
      type: Image
      images:
        - from:
            kind: ImageStreamTag
            name: ${APP_NAME}-builder:latest
          paths:
            - destinationDir: .
              sourcePath: ${BUILD_OUTPUT_DIR}.
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}-nginx-image-runtime:latest
        incremental: true
      type: Source
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChange: {}
    - type: ImageChange
      imageChange:
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}-builder:latest
  status:
    lastVersion: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      app: ${APP_NAME}
    strategy:
      rollingParams:
        timeoutSeconds: 3600
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APP_NAME}
      spec:
        containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: ${APP_NAME}-runtime
          imagePullPolicy: IfNotPresent
          name: ${APP_NAME}-runtime
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
      metadata:
        labels:
          app: ${APP_NAME}
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - ${APP_NAME}-runtime
          from:
            kind: ImageStreamTag
            name: ${APP_NAME}-runtime:latest
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    ports:
    - name: http
      port: 8080
    selector:
      app: ${APP_NAME}
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    host: ${APP_HOST}
    port:
      targetPort: 8080
    to:
      kind: Service
      name: ${APP_NAME}
